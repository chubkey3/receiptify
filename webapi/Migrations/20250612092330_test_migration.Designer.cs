// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Data;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20250612092330_test_migration")]
    partial class test_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("webapi.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("expense_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<DateTime>("ExpenseDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("expense_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int")
                        .HasColumnName("receipt_id");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_amount");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uid");

                    b.HasKey("ExpenseId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ReceiptId" }, "idx_expense_receipt_id");

                    b.HasIndex(new[] { "SupplierId" }, "idx_expense_supplier_id");

                    b.HasIndex(new[] { "Uid" }, "idx_expense_uid");

                    b.ToTable("expense", (string)null);
                });

            modelBuilder.Entity("webapi.Models.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("receipt_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReceiptId"));

                    b.Property<string>("ReceiptUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("receipt_url");

                    b.Property<DateTime?>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("upload_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uploaded_by");

                    b.HasKey("ReceiptId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UploadedBy" }, "uploaded_by");

                    b.ToTable("receipt", (string)null);
                });

            modelBuilder.Entity("webapi.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("supplier_name");

                    b.HasKey("SupplierId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SupplierName" }, "supplier_name")
                        .IsUnique();

                    b.ToTable("supplier", (string)null);
                });

            modelBuilder.Entity("webapi.Models.User", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Uid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("webapi.Models.Expense", b =>
                {
                    b.HasOne("webapi.Models.Receipt", "Receipt")
                        .WithMany("Expenses")
                        .HasForeignKey("ReceiptId")
                        .HasConstraintName("expense_ibfk_2");

                    b.HasOne("webapi.Models.Supplier", "Supplier")
                        .WithMany("Expenses")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("expense_ibfk_3");

                    b.HasOne("webapi.Models.User", "UidNavigation")
                        .WithMany("Expenses")
                        .HasForeignKey("Uid")
                        .IsRequired()
                        .HasConstraintName("expense_ibfk_1");

                    b.Navigation("Receipt");

                    b.Navigation("Supplier");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("webapi.Models.Receipt", b =>
                {
                    b.HasOne("webapi.Models.User", "UploadedByNavigation")
                        .WithMany("Receipts")
                        .HasForeignKey("UploadedBy")
                        .HasConstraintName("receipt_ibfk_1");

                    b.Navigation("UploadedByNavigation");
                });

            modelBuilder.Entity("webapi.Models.Receipt", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("webapi.Models.Supplier", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("webapi.Models.User", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Receipts");
                });
#pragma warning restore 612, 618
        }
    }
}
